# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_audio/distributedaudio.gni")

module_output_path = "distributed_audio/hdf_service/audio_client"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [ "//drivers/peripheral/audio/interfaces/include" ]

  include_dirs += [
    "${hdf_service_path}/hdi_service/common/log/include",
    "${hdf_service_path}/hdi_service/common/include/",
    "${hdf_service_path}/audio_client/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
  ]
}

ohos_unittest("AudioAdapterHdiTest") {
  module_out_path = module_output_path

  configs = [ ":module_private_config" ]

  sources = [ "audio_manager_test.cpp" ]

  deps = [
    "${hdf_service_path}/audio_client:daudio_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"unittest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
}

ohos_unittest("AudioRenderInternalTest") {
  module_out_path = module_output_path

  configs = [ ":module_private_config" ]

  sources = [ "audio_render_internal/audio_render_internal_test.cpp" ]

  deps = [
    "${hdf_service_path}/audio_client:daudio_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"unittest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
}

ohos_unittest("AudioCaptureInternalTest") {
  module_out_path = module_output_path

  configs = [ ":module_private_config" ]

  sources = [ "audio_capture_internal/audio_capture_internal_test.cpp" ]

  deps = [
    "${hdf_service_path}/audio_client:daudio_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"unittest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
}

ohos_unittest("AudioAdapterInternalTest") {
  module_out_path = module_output_path

  configs = [ ":module_private_config" ]

  sources = [ "audio_adapter_internal/audio_adapter_internal_test.cpp" ]

  deps = [
    "${hdf_service_path}/audio_client:daudio_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"unittest\"",
    "LOG_DOMAIN=0xD004100",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
}

group("audio_adapter_hdi_test") {
  testonly = true
  deps = [
    ":AudioAdapterHdiTest",
    ":AudioRenderInternalTest",
    ":AudioCaptureInternalTest",
    ":AudioAdapterInternalTest",
    ]
}
