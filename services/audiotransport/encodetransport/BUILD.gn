# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("../../../distributedaudio.gni")

config("encode_transport_pub_config") {
  include_dirs = [
    "include",
    "../audiochannel/audiodatachannel/include",
    "../audiochannel/interface",
    "../audiotransportstatus/include",
    "../audiotransportstatus/interface",
    "../interface",
    "../../audioprocessor/interface",
  ]
}

ohos_shared_library("distributed_audio_encode_transport") {
  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  stack_protector_ret = true
  include_dirs = [
    "${mediastandard_path}/interfaces/innerkits/native/media/include",
    "${mediastandardfwk_path}/audiocommon/include",
    "//third_party/json/include",
  ]

  include_dirs += [
    "include",
    "${audio_processor_path}/directprocessor/include",
    "${audio_processor_path}/encodeprocessor/include",
    "${audio_processor_path}/encoder/include",
    "${audio_processor_path}/interface",
    "${audio_transport_path}/audiochannel/interface",
    "${audio_transport_path}/audiochannel/audiodatachannel/include",
    "${audio_transport_path}/audiotransportstatus/include",
    "${audio_transport_path}/audiotransportstatus/interface",
    "${audio_transport_path}/interface",
    "${audio_transport_path}/senderengine/include",
    "${common_path}/dfx_utils/include",
    "${common_path}/include",
    "${services_path}/common/audiodata/include",
    "${services_path}/common/audioparam",
    "${softbusadapter_path}/include",
  ]

  public_configs = [ ":encode_transport_pub_config" ]

  sources = [
    "${audio_processor_path}/directprocessor/src/audio_direct_processor.cpp",
    "${audio_processor_path}/encodeprocessor/src/audio_encoder_processor.cpp",
    "${audio_processor_path}/encoder/src/audio_encoder.cpp",
    "${audio_processor_path}/encoder/src/audio_encoder_callback.cpp",
    "${audio_transport_path}/senderengine/src/av_sender_engine_adapter.cpp",
    "${audio_transport_path}/senderengine/src/av_sender_engine_transport.cpp",
    "${services_path}/common/audiodata/src/audio_data.cpp",
    "src/audio_encode_transport.cpp",
  ]

  deps = [
    "${audio_transport_path}/audiochannel/audiodatachannel:distributed_audio_data_channel",
    "${audio_transport_path}/audiotransportstatus:distributed_audio_transport_status",
    "${services_path}/common:distributed_audio_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "distributed_hardware_fwk:distributed_av_sender",
    "dsoftbus:softbus_client",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "player_framework:media_client",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "LOG_DOMAIN=0xD004100",
  ]

  subsystem_name = "distributedhardware"

  part_name = "distributed_audio"
}
