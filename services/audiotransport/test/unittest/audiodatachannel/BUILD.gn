# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_audio/distributedaudio.gni")

module_out_path =
    "distributed_audio/services/audiotransport/audio_data_channel_test"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "//third_party/json/include",
    "//foundation/graphic/standard/interfaces/innerkits/surface",
    "${fwk_common_path}/utils/include",
    "${fwk_utils_path}/include/",
  ]

  include_dirs += [
    "include",
    "${common_path}/include",
    "${services_path}/common/audioparam",
    "${services_path}/common/audiodata/include",
    "${softbusadapter_path}/include",
    "${audio_transport_path}/audio_channel/include",
    "${audio_transport_path}/audiodatachannel/include",
    "${audio_transport_path}/audioctrltransport/interface",
    "${audio_transport_path}/test/unittest/audiotranstestutils/include",
  ]
}

## UnitTest audio_data_channel_test
ohos_unittest("AudioDataChannelTest") {
  module_out_path = module_out_path

  sources = [ "src/audio_data_channel_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${audio_transport_path}/audiodatachannel:distributed_audio_data_channel",
    "${softbusadapter_path}:distributed_audio_softbus_adapter",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "dsoftbus:softbus_client",
    "hiviewdfx_hilog_native:libhilog",
    "multimedia_player_framework:media_client",
  ]
}

group("audio_data_channel_test") {
  testonly = true
  deps = [ ":AudioDataChannelTest" ]
}
