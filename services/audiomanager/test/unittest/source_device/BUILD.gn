# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_audio/distributedaudio.gni")

module_out_path =
    "distributed_audio/services/audiomanager/source_device_test"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "//drivers/peripheral/audio/interfaces/include",
    "//foundation/communication/dsoftbus/interfaces/kits/transport",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
    "//third_party/json/include",
    "//utils/system/safwk/native/include",
    "${fwk_common_path}/utils/include",
    "${mediastandardfwk_path}/audiocapturer/include",
    "${mediastandardfwk_path}/audiocommon/include",
    "${mediastandardfwk_path}/audiomanager/include",
  ]

  include_dirs += [
    "include",
    "${audio_control_path}/controlsource/include",
    "${audio_hdi_proxy_path}/include",
    "${audio_processor_path}/interface",
    "${audio_transport_path}/interface",
    "${audio_transport_path}/audioctrltransport/interface",
    "${audio_transport_path}/audiochannel/interface",
    "${audio_transport_path}/audiotransportstatus/include",
    "${audio_transport_path}/audiotransportstatus/interface",
    "${audio_transport_path}/encodetransport/include",
    "${audio_transport_path}/decodetransport/include",
    "${common_path}/include",
    "${common_path}/dfx_utils/include",
    "${distributedaudio_path}/audiohandler/include",
    "${hdf_service_path}/audio_client/include",
    "${hdf_service_path}/hdi_service/common/include",
    "${interfaces_path}/inner_kits/native_cpp/audio_sink/include",
    "${interfaces_path}/inner_kits/native_cpp/audio_source/include",
    "${innerkits_path}/native_cpp/audio_source/include",
    "${innerkits_path}/native_cpp/audio_sink/include",
    "${services_path}/common/audioparam",
    "${services_path}/common/taskProcessor/include",
    "${services_path}/common/audiodata/include",
    "${services_path}/common/audioeventcallback",
    "${services_path}/audiomanager/managersource/include",
    "${services_path}/audiomanager/test/unittest/audiomanagertestutils/include",
    "${softbusadapter_path}/include",
  ]
}

## UnitTest daudio_source_dev_test
ohos_unittest("DaudioSourceDevTest") {
  module_out_path = module_out_path

  sources = [ "src/daudio_source_dev_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${services_path}/audiomanager/servicesource:distributed_audio_source",
    "${hdf_interfaces_path}/audioext/v1_0:libdaudioext_proxy_1.0",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]
}

## UnitTest daudio_source_dev_test
ohos_unittest("DMicDevTest") {
  module_out_path = module_out_path

  sources = [ "src/dmic_dev_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${audio_transport_path}/decodetransport:distributed_audio_decode_transport",
    "${services_path}/audiomanager/servicesource:distributed_audio_source",
    "${hdf_interfaces_path}/audioext/v1_0:libdaudioext_proxy_1.0",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]
}

## UnitTest daudio_source_dev_test
ohos_unittest("DSpeakerDevTest") {
  module_out_path = module_out_path

  sources = [ "src/dspeaker_dev_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${audio_transport_path}/encodetransport:distributed_audio_encode_transport",
    "${services_path}/audiomanager/servicesource:distributed_audio_source",
    "${hdf_interfaces_path}/audioext/v1_0:libdaudioext_proxy_1.0",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]
}

group("daudio_source_dev_test") {
  testonly = true
  deps = [ 
    ":DaudioSourceDevTest",
    ":DMicDevTest",
    ":DSpeakerDevTest",
  ]
}
