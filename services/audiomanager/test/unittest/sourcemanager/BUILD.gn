# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../distributedaudio.gni")

module_out_path = "distributed_audio/services/audiomanager/source_manager_test"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${driver_audio_path}/include",
    "${fwk_common_path}/utils/include",
    "${mediastandardfwk_path}/audiocapturer/include",
    "${mediastandardfwk_path}/audiocommon/include",
    "${mediastandardfwk_path}/audiomanager/include",
  ]

  include_dirs += [
    "include",
    "${audio_control_path}/controlsource/include",
    "${audio_hdi_proxy_path}/include",
    "${audio_processor_path}/interface",
    "${audio_transport_path}/audioctrltransport/interface",
    "${audio_transport_path}/audiotransportstatus/include",
    "${audio_transport_path}/audiotransportstatus/interface",
    "${audio_transport_path}/interface",
    "${audio_transport_path}/receiverengine/include",
    "${audio_transport_path}/senderengine/include",
    "${common_path}/include",
    "${common_path}/dfx_utils/include",
    "${distributedaudio_path}/audiohandler/include",
    "${hdf_service_path}/hdi_service/common/include",
    "${interfaces_path}/inner_kits/native_cpp/audio_sink/include",
    "${interfaces_path}/inner_kits/native_cpp/audio_source/include",
    "${innerkits_path}/native_cpp/audio_source/include",
    "${innerkits_path}/native_cpp/audio_sink/include",
    "${services_path}/audiomanager/managersource/include",
    "${services_path}/audiomanager/servicesource/include",
    "${services_path}/common/audiodata/include",
    "${services_path}/common/audioeventcallback",
    "${services_path}/common/audioparam",
    "${services_path}/common/taskProcessor/include",
  ]
}

## UnitTest daudio_source_mgr_test
ohos_unittest("DaudioSourceMgrTest") {
  module_out_path = module_out_path

  sources = [ "src/daudio_source_mgr_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = [
    "${innerkits_path}/native_cpp/audio_source:distributed_audio_source_sdk",
    "${services_path}/audiomanager/servicesource:distributed_audio_source",
    "${services_path}/common:distributed_audio_utils",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "distributed_hardware_fwk:distributed_av_receiver",
    "distributed_hardware_fwk:distributed_av_sender",
    "drivers_interface_distributed_audio:libdaudioext_proxy_2.0",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hdf_core:libhdi",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

group("daudio_source_mgr_test") {
  testonly = true
  deps = [ ":DaudioSourceMgrTest" ]
}
