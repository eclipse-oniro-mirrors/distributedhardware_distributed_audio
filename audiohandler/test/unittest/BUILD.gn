# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/distributedhardware/distributed_audio/distributedaudio.gni")

module_out_path = "distributed_audio/audio_handler_test"

config("module_private_config") {
    visibility = [ ":*" ]
    include_dirs = [
        "//utils/native/base/include",
        "include",
        "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiomanager/include",
        "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocommon/include",
        "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocapturer/include",
        "${fwk_common_path}/utils/include",
        "${common_path}/include",
        "//third_party/json/include",
        "//foundation/multimedia/player_framework/interfaces/inner_api/native",
        "//foundation/multimedia/player_framework/services/utils/include",
        "//foundation/multimedia/image_standard/interfaces/innerkits/include",
        "${services_path}/common/audioparam",
        "${distributedaudio_path}/audiohandler/include"
    ]

}

## UnitTest audio_handler_test
ohos_unittest("AudioHandlerTest") {
    module_out_path = module_out_path

    sources = [ "${distributedaudio_path}/audiohandler/test/unittest/src/daudio_handler_test.cpp" ]

    configs = [ ":module_private_config" ]

    deps = [
        "//third_party/googletest:gtest_main",
        "//utils/native/base:utils",
        "${common_path}:distributed_audio_utils",
        "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiomanager:audio_client",
        "//foundation/multimedia/player_framework/interfaces/inner_api/native:media_client",
        "//foundation/multimedia/player_framework/services/utils:media_service_utils",
        "//foundation/multimedia/image_standard/interfaces/innerkits:image_native",
        "//foundation/multimedia/audio_framework/interfaces/inner_api/native/audiocapturer:audio_capturer",
        "${distributedaudio_path}/audiohandler:distributed_audio_handler"
    ]

    external_deps = [
        "hiviewdfx_hilog_native:libhilog",
    ]
}

group("audio_handler_test") {
    testonly = true
    deps = [ ":AudioHandlerTest" ]
}