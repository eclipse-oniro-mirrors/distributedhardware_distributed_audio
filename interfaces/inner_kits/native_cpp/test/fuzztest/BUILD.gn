# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("../../../../../distributedaudio.gni")

group("fuzztest") {
  testonly = true

  deps = [
    "${services_path}/audiomanager/test/fuzztest/sinkservicedaudionotify_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkserviceinitsink_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkservicepausedistributedhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkservicereleasesink_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkserviceresumedistributedhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkservicestopdistributedhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkservicesubscribelocalhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkserviceunsubscribelocalhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sinkstubonremoterequest_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceserviceconfigdistributedhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceservicedaudionotify_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceserviceinitsource_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceserviceregisterdistributedhardware_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceservicereleasesource_fuzzer:fuzztest",
    "${services_path}/audiomanager/test/fuzztest/sourceserviceunregisterdistributedhardware_fuzzer:fuzztest",
    "${services_path}/common/test/fuzztest/audiodatasetinit64_fuzzer:fuzztest",
    "onremotesinksvrdied_fuzzer:fuzztest",
    "onremotesourcesvrdied_fuzzer:fuzztest",
    "sinkhandlerfinishstartsa_fuzzer:fuzztest",
    "sinkhandlerinitsink_fuzzer:fuzztest",
    "sinkhandlerpausedistributedhardware_fuzzer:fuzztest",
    "sinkhandlerregisterprivacyresources_fuzzer:fuzztest",
    "sinkhandlerresumedistributedhardware_fuzzer:fuzztest",
    "sinkhandlerstopdistributedhardware_fuzzer:fuzztest",
    "sinkhandlersubscribelocalhardware_fuzzer:fuzztest",
    "sinkhandlerunsubscribelocalhardware_fuzzer:fuzztest",
    "sinkipccallbackonnotifyresourceinfo_fuzzer:fuzztest",
    "sinkipccallbackonremoterequest_fuzzer:fuzztest",
    "sinkonloadsystemabilityfail_fuzzer:fuzztest",
    "sinkonloadsystemabilitysuccess_fuzzer:fuzztest",
    "sinkproxydaudionotify_fuzzer:fuzztest",
    "sinkproxyinitsink_fuzzer:fuzztest",
    "sinkproxysubscribelocalhardware_fuzzer:fuzztest",
    "sinkproxyunsubscribelocalhardware_fuzzer:fuzztest",
    "sourcehandlerconfigdistributedhardware_fuzzer:fuzztest",
    "sourcehandlerfinishstartsa_fuzzer:fuzztest",
    "sourcehandlerinitsource_fuzzer:fuzztest",
    "sourcehandlerregisterdistributedhardware_fuzzer:fuzztest",
    "sourcehandlerunregisterdistributedhardware_fuzzer:fuzztest",
    "sourceipccallbackonnotifyregresult_fuzzer:fuzztest",
    "sourceipccallbackonnotifyunregresult_fuzzer:fuzztest",
    "sourceonloadsystemabilityfail_fuzzer:fuzztest",
    "sourceonloadsystemabilitysuccess_fuzzer:fuzztest",
    "sourceproxyconfigdistributedhardware_fuzzer:fuzztest",
    "sourceproxydaudionotify_fuzzer:fuzztest",
    "sourceproxyinitsource_fuzzer:fuzztest",
    "sourceproxyregisterdistributedhardware_fuzzer:fuzztest",
    "sourceproxyunregisterdistributedhardware_fuzzer:fuzztest",
  ]
}
